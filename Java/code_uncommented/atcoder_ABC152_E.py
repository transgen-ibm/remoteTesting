import java.math.* ; import java.util.* ; import java.util.function.* ; def main ( ): N = int ( input ( ) ) ; A = [ int ( input ( ) ) for i in range ( N ) ] ; lcm = BigInteger.ONE ; for ai in A: a = BigInteger.valueOf ( ai ) ; lcm = lcm.divide ( lcm.gcd ( a ) ).multiply ( a ) ; mod = 1000000007 ; modLcm = lcm.remainder ( BigInteger.valueOf ( mod ) ).longValue ( ) ; ans = 0 ; for ai in A: ans = ( ans + modDiv ( modLcm, ai, mod ) ) % mod ; print ( ans ) ; return ; def modDiv ( a, b, mod ): return ( a % mod ) * modInv ( b, mod ) % mod ; def modInv ( x, mod ): return modPow ( x, mod - 2, mod ) ; def modPow ( b, e, mod ): ans = 1 ; x = b % mod ; for y in range ( e ): if ( ( y & 1 ) == 1 ): ans = ( ans * x ) % mod ; x = ( x * x ) % mod ; return ans ; main ( ) ; 